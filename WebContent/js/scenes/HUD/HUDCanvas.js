// Generated by Phaser Editor v1.2.1

/**
 * HUDCanvas.
 * @param {Phaser.Game} aGame The game.
 * @param {Phaser.Group} aParent The parent group. If not given the game world will be used instead.
 */
function HUDCanvas(aGame, aParent) {
	Phaser.Group.call(this, aGame, aParent);

	/* --- pre-init-begin --- */

	// you can insert code here

	/* --- pre-init-end --- */

	this.game.add.sprite(0, -129, 'HUDAtlas', 'header', this);

	this.game.add.sprite(0, 797, 'HUDAtlas', 'footer', this);

	this.game.add.sprite(111, 10, 'HUDAtlas', 'leftBarEnd', this);

	var anxietyBarMiddle = this.game.add.tileSprite(120, 10, 7, 19, 'HUDAtlas', 'barMiddle', this);
	anxietyBarMiddle.scale.setTo(221.07512928627278, 1.0);

	this.game.add.sprite(1667, 10, 'HUDAtlas', 'rightBarEnd', this);

	var anxietyFill = this.game.add.tileSprite(119, 12, 4, 15, 'HUDAtlas', 'barFill', this);
	anxietyFill.scale.setTo(60.69777847539599, 1.0);

	this.game.add.sprite(111, 41, 'HUDAtlas', 'leftBarEnd', this);

	var stressBarMiddle = this.game.add.tileSprite(120, 41, 7, 19, 'HUDAtlas', 'barMiddle', this);
	stressBarMiddle.scale.setTo(117.94871248565869, 1.0);

	this.game.add.sprite(945, 41, 'HUDAtlas', 'rightBarEnd', this);

	var stressFill = this.game.add.tileSprite(119, 43, 4, 15, 'HUDAtlas', 'barFill', this);
	stressFill.scale.setTo(60.69777847539599, 1.0);

	var options = this.game.add.group(this);

	var optionOne = this.game.add.button(960, 250, 'HUDAtlas', null, this, null, 'option', null, null, options);
	optionOne.anchor.setTo(0.5, 0.5);

	var optionTwo = this.game.add.button(960, 350, 'HUDAtlas', null, this, null, 'option', null, null, options);
	optionTwo.anchor.setTo(0.5, 0.5);

	var optionThree = this.game.add.button(960, 450, 'HUDAtlas', null, this, null, 'option', null, null, options);
	optionThree.anchor.setTo(0.5, 0.5);

	var optionFour = this.game.add.button(960, 550, 'HUDAtlas', null, this, null, 'option', null, null, options);
	optionFour.anchor.setTo(0.5, 0.5);

	var optionFive = this.game.add.button(960, 650, 'HUDAtlas', null, this, null, 'option', null, null, options);
	optionFive.anchor.setTo(0.5, 0.5);

	 // public fields

	this.fAnxietyFill = anxietyFill;
	this.fStressFill = stressFill;
	this.fOptions = options;
	this.fOptionOne = optionOne;
	this.fOptionTwo = optionTwo;
	this.fOptionThree = optionThree;
	this.fOptionFour = optionFour;
	this.fOptionFive = optionFive;

	/* --- post-init-begin --- */

	optionOne.onInputOver.add(buttonScale, {button : this.fOptionOne, scale: 1.05});
	optionOne.onInputOut.add(buttonScale, {button : this.fOptionOne, scale: 1});

	optionTwo.onInputOver.add(buttonScale, {button : this.fOptionTwo, scale: 1.05});
	optionTwo.onInputOut.add(buttonScale, {button : this.fOptionTwo, scale: 1});
	
	optionThree.onInputOver.add(buttonScale, {button : this.fOptionThree, scale: 1.05});
	optionThree.onInputOut.add(buttonScale, {button : this.fOptionThree, scale: 1});
	
	optionFour.onInputOver.add(buttonScale, {button : this.fOptionFour, scale: 1.05});
	optionFour.onInputOut.add(buttonScale, {button : this.fOptionFour, scale: 1});
	
	optionFive.onInputOver.add(buttonScale, {button : this.fOptionFive, scale: 1.05});
	optionFive.onInputOut.add(buttonScale, {button : this.fOptionFive, scale: 1});
	/* --- post-init-end --- */
}

/** @type Phaser.Group */
var HUDCanvas_proto = Object.create(Phaser.Group.prototype);
HUDCanvas.prototype = HUDCanvas_proto;
HUDCanvas.prototype.constructor = Phaser.Group;

/* --- end generated code --- */

// you can insert code here

